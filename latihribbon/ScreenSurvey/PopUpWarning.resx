<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>